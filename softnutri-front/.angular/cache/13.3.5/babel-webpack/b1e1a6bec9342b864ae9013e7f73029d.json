{"ast":null,"code":"export function createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  x = isNaN(x) ? 0 : x;\n  x2 = isNaN(x2) ? 1 : x2;\n  y = isNaN(y) ? 0 : y;\n  y2 = isNaN(y2) ? 0 : y2;\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\nexport function createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\nexport function getCanvasGradient(ctx, obj, rect) {\n  var canvasGradient = obj.type === 'radial' ? createRadialGradient(ctx, obj, rect) : createLinearGradient(ctx, obj, rect);\n  var colorStops = obj.colorStops;\n\n  for (var i = 0; i < colorStops.length; i++) {\n    canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n  }\n\n  return canvasGradient;\n}\nexport function isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths === prevClipPaths || !clipPaths && !prevClipPaths) {\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nexport function getSize(root, whIdx, opts) {\n  var wh = ['width', 'height'][whIdx];\n  var cwh = ['clientWidth', 'clientHeight'][whIdx];\n  var plt = ['paddingLeft', 'paddingTop'][whIdx];\n  var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n  if (opts[wh] != null && opts[wh] !== 'auto') {\n    return parseFloat(opts[wh]);\n  }\n\n  var stl = document.defaultView.getComputedStyle(root);\n  return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n}","map":null,"metadata":{},"sourceType":"module"}