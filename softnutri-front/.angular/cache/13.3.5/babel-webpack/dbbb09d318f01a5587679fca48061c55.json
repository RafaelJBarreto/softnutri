{"ast":null,"code":"import { cubicAt, cubicRootAt } from '../core/curve.js';\nimport { trim } from '../core/util.js';\nvar regexp = /cubic-bezier\\(([0-9,\\.e ]+)\\)/;\nexport function createCubicEasingFunc(cubicEasingStr) {\n  var cubic = cubicEasingStr && regexp.exec(cubicEasingStr);\n\n  if (cubic) {\n    var points = cubic[1].split(',');\n    var a_1 = +trim(points[0]);\n    var b_1 = +trim(points[1]);\n    var c_1 = +trim(points[2]);\n    var d_1 = +trim(points[3]);\n\n    if (isNaN(a_1 + b_1 + c_1 + d_1)) {\n      return;\n    }\n\n    var roots_1 = [];\n    return function (p) {\n      return p <= 0 ? 0 : p >= 1 ? 1 : cubicRootAt(0, a_1, c_1, 1, p, roots_1) && cubicAt(0, b_1, d_1, 1, roots_1[0]);\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module"}