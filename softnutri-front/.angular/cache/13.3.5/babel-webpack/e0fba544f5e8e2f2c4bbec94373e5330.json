{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http'; //import { JwtHelperService } from '@auth0/angular-jwt';\n\nimport { environment as e } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, //   public jwtHelper: JwtHelperService,\n    tokenStorageService) {\n      this.http = http;\n      this.tokenStorageService = tokenStorageService;\n    }\n\n    login(userLogin) {\n      return this.http.post(e.api.rota + e.api.usuario.autenticar, userLogin, httpOptions);\n    }\n\n    refreshToken(token) {\n      return this.http.post(e.api.rota + e.api.usuario.refreshtoken, {\n        refreshToken: token\n      }, httpOptions);\n    }\n\n    isAuthenticated() {\n      const token = this.tokenStorageService.getToken();\n\n      if (token != undefined) {\n        return null; // !this.jwtHelper.isTokenExpired(token);\n      } else {\n        return false;\n      }\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenStorageService));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}