{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let ChartsService = /*#__PURE__*/(() => {\n  class ChartsService {\n    loadLineChartData() {\n      return of({\n        series: [{\n          name: 'series1',\n          data: [31, 40, 28, 51, 42, 109, 100]\n        }, {\n          name: 'series2',\n          data: [11, 32, 45, 32, 34, 52, 41]\n        }],\n        categories: ['2018-09-19T00:00:00.000Z', '2018-09-19T01:30:00.000Z', '2018-09-19T02:30:00.000Z', '2018-09-19T03:30:00.000Z', '2018-09-19T04:30:00.000Z', '2018-09-19T05:30:00.000Z', '2018-09-19T06:30:00.000Z']\n      });\n    }\n\n    dashedLineChartData() {\n      return of({\n        series: [{\n          name: 'Session Duration',\n          data: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10]\n        }, {\n          name: 'Page Views',\n          data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35]\n        }, {\n          name: 'Total Visits',\n          data: [87, 57, 74, 99, 75, 38, 62, 47, 82, 56, 45, 47]\n        }],\n        categories: ['01 Jan', '02 Jan', '03 Jan', '04 Jan', '05 Jan', '06 Jan', '07 Jan', '08 Jan', '09 Jan', '10 Jan', '11 Jan', '12 Jan']\n      });\n    }\n\n    loadPieChartData() {\n      return of({\n        series: [Math.round(Math.random() * 100), Math.round(Math.random() * 100), Math.round(Math.random() * 100), Math.round(Math.random() * 100), Math.round(Math.random() * 100)],\n        labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E']\n      });\n    }\n\n    loadHeatmapChartData() {\n      return of({\n        series: [{\n          name: 'Metric1',\n          data: this.generateApexHeatmapChartData(18, {\n            min: 0,\n            max: 90\n          })\n        }, {\n          name: 'Metric2',\n          data: this.generateApexHeatmapChartData(18, {\n            min: 0,\n            max: 90\n          })\n        }, {\n          name: 'Metric3',\n          data: this.generateApexHeatmapChartData(18, {\n            min: 0,\n            max: 90\n          })\n        }, {\n          name: 'Metric4',\n          data: this.generateApexHeatmapChartData(18, {\n            min: 0,\n            max: 90\n          })\n        }, {\n          name: 'Metric5',\n          data: this.generateApexHeatmapChartData(18, {\n            min: 0,\n            max: 90\n          })\n        }, {\n          name: 'Metric6',\n          data: this.generateApexHeatmapChartData(18, {\n            min: 0,\n            max: 90\n          })\n        }, {\n          name: 'Metric7',\n          data: this.generateApexHeatmapChartData(18, {\n            min: 0,\n            max: 90\n          })\n        }, {\n          name: 'Metric8',\n          data: this.generateApexHeatmapChartData(18, {\n            min: 0,\n            max: 90\n          })\n        }, {\n          name: 'Metric9',\n          data: this.generateApexHeatmapChartData(18, {\n            min: 0,\n            max: 90\n          })\n        }]\n      });\n    }\n\n    generateApexHeatmapChartData(count, yrange) {\n      let i = 0;\n      const series = [];\n\n      while (i < count) {\n        const x = 'w' + (i + 1).toString();\n        const y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n        series.push({\n          x,\n          y\n        });\n        i++;\n      }\n\n      return series;\n    }\n\n  }\n\n  ChartsService.ɵfac = function ChartsService_Factory(t) {\n    return new (t || ChartsService)();\n  };\n\n  ChartsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChartsService,\n    factory: ChartsService.ɵfac,\n    providedIn: 'root'\n  });\n  return ChartsService;\n})();","map":null,"metadata":{},"sourceType":"module"}